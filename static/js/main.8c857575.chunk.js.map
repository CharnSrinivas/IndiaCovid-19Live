{"version":3,"sources":["Components/Graph.js","Components/Home.js","Components/SearchBar.js","Components/Table.js","Components/Loading.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Graph","casesTimeSeries","JSON","parse","localStorage","getItem","cases_time_series","labels","map","timeSeriesData","index","date","split","substring","casesGraphData","datasets","label","data","totalconfirmed","fill","pointRadius","backgroundColor","borderColor","recoveredGaphData","totalrecovered","deathsGraphData","totaldeceased","options","responsive","title","display","text","className","Total","props","confirmed","active","recovered","deaths","LastUpdate","lastUpdate","Date","monthArr","Array","getUTCDate","getUTCMonth","getUTCFullYear","toLocaleTimeString","Home","prevProps","prevState","this","React","Component","SearchBar","onSearchChange","type","id","onChange","placeholder","Row","data-aos","sno","state","TableHeading","Table","stateWiseData","searchFieldValue","tableRows","i","length","toLowerCase","includes","push","Aos","init","offset","Loading","App","element","setState","target","value","a","fetch","json","statesJsonData","meta","last_updated","jsonData","statewise","sort","b","a_avg","b_avg","parseFloat","parseInt","toLocaleString","setItem","stringify","removeItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c857575.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\nimport { Line } from \"react-chartjs-2\";\n\nconst Graph = () => {\n  let casesTimeSeries = JSON.parse(\n    localStorage.getItem(\"actualData\")\n  ).cases_time_series;\n  let labels = casesTimeSeries.map((timeSeriesData, index) => {\n    if (index % 5 === 0) {\n      let date = timeSeriesData.date.split(\" \");\n      return (\n        date[0] + \" \" + date[1].substring(0, 3) + \" \" + date[2].substring(2, 4)\n      );\n    } else {\n      return \"\";\n    }\n  });\n  let casesData = casesTimeSeries.map(\n    (timeSeriesData) => timeSeriesData.totalconfirmed\n  );\n  let recoveredData = casesTimeSeries.map(\n    (timeSeriesData) => timeSeriesData.totalrecovered\n  );\n  let deathsData = casesTimeSeries.map(\n    (timeSeriesData) => timeSeriesData.totaldeceased\n  );\n  const casesGraphData = {\n    labels: labels,\n    datasets: [\n      {\n        label: \"Cases\",\n        data: casesData,\n        fill: true,\n        pointRadius: 1,\n        backgroundColor: \"rgba(240,173,78,0.1)\",\n        borderColor: \"rgba(240,173,78,0.6)\",\n      },\n    ],\n  };\n  const recoveredGaphData = {\n    labels: labels,\n    datasets: [\n      {\n        label: \"Recovered\",\n        data: recoveredData,\n        fill: true,\n        pointRadius: 1,\n        backgroundColor: \"rgba(34,187,51,0.1) \",\n        borderColor: \"rgba(34,187,51,0.6) \",\n      },\n    ],\n  };\n  const deathsGraphData = {\n    labels: labels,\n    datasets: [\n      {\n        label: \"Deaths\",\n        data: deathsData,\n        fill: true,\n        pointRadius: 1,\n        backgroundColor: \"rgba(187,33,36 , 0.1)\",\n        borderColor: \" rgba(187,33,36,0.6)\",\n      },\n    ],\n  };\n\n  const options = {\n    responsive: false,\n    title: {\n      display: true,\n      text: \"PLEASE DISPLAY FOR HEAVEN'S SAKE\",\n    },\n  };\n  return (\n    \n    <div className=\"chart-div\">\n      <div className=\"chart-heading\"> Overall Data from <span > 30 January 2020 </span> to today</div>\n      <div className=\"charts\">\n        <div>\n          <Line data={casesGraphData} options={options} />\n        </div>\n        <div>\n          <Line data={recoveredGaphData} options={options} />\n        </div>\n        <div>\n          <Line data={deathsGraphData} options={options} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Graph;\n","import React from \"react\";\nimport \"./Home.css\";\nimport Graph from \"./Graph\";\n\nconst Total = (props) => {\n  return (\n    <div className=\"total-div\">\n      <div className=\"main-title\">\n        <span className=\"covid-title\"> COVID-19 </span> cases in India\n      </div>\n      <div className=\"total-info\">\n        <div className=\"confirmed\">\n          <div className=\"heading\">confirmed</div>\n          <div className=\"number\">{props.confirmed}</div>\n        </div>\n        <div className=\"active\">\n          <div className=\"heading\">Active</div>\n          <div className=\"number\">{props.active}</div>\n        </div>\n        <div className=\"recovered\">\n          <div className=\"heading\">Recovered</div>\n          <div className=\"number\">{props.recovered}</div>\n        </div>\n        <div className=\"deaths\">\n          <div className=\"heading\">Deaths</div>\n          <div className=\"number\">{props.deaths}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst LastUpdate = ({ lastUpdate }) => {\n  let date = new Date(lastUpdate);\n  var monthArr = new Array();\n  monthArr[0] = \"January\";\n  monthArr[1] = \"February\";\n  monthArr[2] = \"March\";\n  monthArr[3] = \"April\";\n  monthArr[4] = \"May\";\n  monthArr[5] = \"June\";\n  monthArr[6] = \"July\";\n  monthArr[7] = \"August\";\n  monthArr[8] = \"September\";\n  monthArr[9] = \"October\";\n  monthArr[10] = \"November\";\n  monthArr[11] = \"December\";\n  let dayofMonth = date.getUTCDate()\n  let month = monthArr[date.getUTCMonth()];\n  let year = date.getUTCFullYear();\n  let time  = date.toLocaleTimeString()\n  \n  lastUpdate =  \"Last updated on \"+dayofMonth+\" \"+month+\" \"+year+\" ,\"+time+\" \"\n  return <div className=\"last-update-div\">{lastUpdate}</div>;\n};\n\nclass Home extends React.Component {\n  ////////////  Restricting to Update Home Page is Search Field Changes /////////////////////////////////////\n  shouldComponentUpdate(prevProps, prevState) {\n    if (this.props !== prevProps) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  render() {\n    let props = this.props;\n    return (\n      <div className=\"home-div\">\n        <Total\n          confirmed={props.confirmed}\n          deaths={props.deaths}\n          recovered={props.recovered}\n          active={props.active}\n        />\n        <LastUpdate lastUpdate={props.lastUpdate} />\n        <Graph />\n      </div>\n    );\n  }\n}\nexport default Home;\n","import React from 'react'\nimport './style.css'\nconst SearchBar = ({onSearchChange}) =>{\n\n    return(\n        <div className='search-bar-div'>\n            <input type='text' className='search-bar' id = 'search-bar' onChange = {onSearchChange} placeholder='Search state'></input>\n        </div>\n    );\n\n}\n\nexport default SearchBar;","import React from 'react'\nimport './style.css'\nimport Aos from 'aos';\nimport 'aos/dist/aos.css'\nconst Row = (props) => {\n\n    return (\n        <div className='table-row' >\n            <div className=\"table-cell\" data-aos=\"fade-up\"> {props.sno}      </div>\n            <div className=\"table-cell\" data-aos=\"fade-up\"> {props.state}    </div>\n            <div className=\"table-cell\" data-aos=\"fade-up\">{props.active}   </div>\n            <div className=\"table-cell\" data-aos=\"fade-up\">{props.recovered}</div>\n            <div className=\"table-cell\" data-aos=\"fade-up\">{props.deaths}   </div>\n        </div>\n    );\n}\n\nconst TableHeading = () => {\n    return (\n        <div className='table-heading'>\n            <div className=\"table-cell\"> S.No      </div>\n            <div className=\"table-cell\"> States    </div>\n            <div className=\"table-cell\">    Active    </div>\n            <div className=\"table-cell\"> Recovered</div>\n            <div className=\"table-cell\">Deaths   </div>\n        </div>\n    );\n}\n\nconst Table = (props) => {\n    let stateWiseData = props.stateWiseData;\n    let searchFieldValue = props.searchFieldValue;\n    let tableRows = []\n    let sno = 1;\n    for (let i = 1; i < stateWiseData.length - 1; i++) {\n        if ((stateWiseData[i].state).toLowerCase().includes(searchFieldValue)) {\n            tableRows.push(\n                < Row\n                    key ={i}\n                    sno={sno}\n                    state={stateWiseData[i].state}\n                    active={stateWiseData[i].active}\n                    recovered={stateWiseData[i].recovered}\n                    deaths={stateWiseData[i].deaths}\n                />\n\n            )\n            sno += 1\n        }\n        \n    }\n    // console.log(stateWiseData);\n    // console.log(tableRows);\n    Aos.init({\n        offset: 40\n    })\n    return (\n        <div className='table-div'>\n            <div className='table-body'>\n                <TableHeading />\n                {tableRows}\n\n            </div>\n        </div>\n    );\n}\n\nexport default Table;","import React from 'react'\nimport './style.css'\n\nconst Loading =() =>{\n    return (\n        <div className='loading-div'>\n                <div >\n                Please wait...\n                </div>\n        </div>\n    );\n}\n\nexport default Loading;\n\n\n\n","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"../Components/Home\";\nimport SearchBar from \"../Components/SearchBar.js\";\n// import Cards from '../Components/Card';\nimport Table from \"../Components/Table\";\nimport Loading from \"../Components/Loading\";\n\n\n// const currentCasesUrl = \"https://api.covid19india.org/v4/min/data.min.json\"\nconst dataUrl = \"https://api.covid19india.org/data.json\";\nconst stateWiseDataUrl = \"https://api.covid19india.org/v4/min/data.min.json\"\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      stateWiseData: [],\n      searchFieldValue: \"\",\n      lastUpdate : \"\"\n    };\n  }\n\n  //////////////////  Fetching data from api  /////////////////////////////////\n  async componentDidMount() {\n    const data = await fetch(dataUrl);\n    const statesJsonData = await (await fetch(stateWiseDataUrl)).json()\n    const lastUpdate =await statesJsonData[\"TT\"].meta.last_updated;;\n    const jsonData = await data.json();\n    let stateWiseData = jsonData.statewise;\n    // Adding state wise data in desending order to localstorage\n    stateWiseData.sort(function (a, b) {\n      let a_avg = (a.active + a.deaths) / 2;\n      let b_avg = (b.active + b.deaths) / 2;\n      return parseFloat(b_avg) - parseFloat(a_avg);\n    });\n\n  /////////////////     Converting plain numbers to comma seperated numbers    ////////////////////////\n    for (let i =0 ;i < stateWiseData.length ; i++)\n    {\n     stateWiseData[i].active = parseInt( stateWiseData[i].active).toLocaleString();\n      stateWiseData[i].confirmed = parseInt(stateWiseData[i].confirmed ).toLocaleString();\n      stateWiseData[i].deaths = parseInt(stateWiseData[i].deaths ).toLocaleString();\n      stateWiseData[i].recovered = parseInt(stateWiseData[i].recovered).toLocaleString();\n      \n    }\n    \n    localStorage.setItem(\"stateWiseData\", JSON.stringify(stateWiseData));\n    localStorage.setItem(\"actualData\", JSON.stringify(jsonData));\n    localStorage.setItem('lastUpdate',lastUpdate)\n    this.setState({\n      stateWiseData: stateWiseData,\n      lastUpdate :lastUpdate\n    });\n\n  }\n\n  //////////////////////////////////////////////////////////////////\n\n  // Removing stored data form localstroage\n  componentWillUnmount() {\n    localStorage.removeItem(\"stateWiseData\");\n    localStorage.removeItem(\"actualData\");\n  }\n  //////////////////////////////////////////////////////////////////\n  \n  /////////////////////////////////   On Search Change Fucntion /////////////////////////////////\n  onSearchChange = (element) => {\n    this.setState({\n      searchFieldValue: element.target.value.toLowerCase(),\n    });\n  };\n\n  ///////////////////////////////// Rendering /////////////////////////////////\n  render() {\n    let stateWiseData = this.state.stateWiseData;\n    if (stateWiseData.length > 0) {\n      return (\n        \n        <div className=\"App\">\n          <Home\n            active={stateWiseData[0].active}\n            confirmed={stateWiseData[0].confirmed}\n            deaths={stateWiseData[0].deaths}\n            recovered={stateWiseData[0].recovered}\n            lastUpdate = {this.state.lastUpdate}\n          />\n          <SearchBar onSearchChange={this.onSearchChange} />\n          {/* <Cards stateWiseData = {stateWiseData}/> */}\n          <Table\n            stateWiseData={stateWiseData}\n            searchFieldValue={this.state.searchFieldValue}\n          />{\" \"}\n        </div>\n        \n      );\n    } else {\n      return (\n        \n          <Loading />\n        \n      );\n    }\n  }\n  //////////////////////////////////////////////////////////////////\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}